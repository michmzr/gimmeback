buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.1.4.RELEASE")
        classpath "net.ltgt.gradle:gradle-apt-plugin:0.21"
    }
}

plugins {
    id 'net.ltgt.apt' version '0.8'
    id 'net.ltgt.apt-idea' version '0.21'
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'net.ltgt.apt-idea'
apply plugin: 'net.ltgt.apt-eclipse'

bootJar {
    baseName = 'gimmeback'
    version =  '0.1.0'
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

ext {
    mapstructVersion = "$mapStructVersion"
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")

    testCompile('org.springframework.boot:spring-boot-starter-test')
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: '2.1.5.RELEASE'

    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-jpa
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '2.1.6.RELEASE'

    //Data
    compile group: 'org.springframework', name: 'spring-jdbc', version: '5.1.8.RELEASE'
    compile 'mysql:mysql-connector-java'

    //3rd
    compile "org.projectlombok:lombok:$lombokVersion"
    annotationProcessor "org.projectlombok:lombok:$lombokVersion"
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.9.9'

    //Maintanance
    developmentOnly("org.springframework.boot:spring-boot-devtools")

    //Security
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: '2.1.6.RELEASE'
    compile group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'

    //Mapping
    implementation "org.mapstruct:mapstruct:$mapStructVersion"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapStructVersion}"

    //Testing
    testImplementation "org.junit.jupiter:junit-jupiter-params:$junitVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"

    testRuntimeOnly "org.junit.vintage:junit-vintage-engine:$junitVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"

    // If you are using mapstruct in test code
    testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapStructVersion}"
}

test {
    useJUnitPlatform()
}